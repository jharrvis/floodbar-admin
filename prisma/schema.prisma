// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  password  String
  role      String   @default("viewer") // admin, editor, viewer
  status    String   @default("active") // active, inactive
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  lastLogin DateTime?

  @@map("users")
}

model LandingPage {
  id        String   @id @default(cuid())
  heroTitle String   @db.Text
  heroSubtitle String @db.Text
  heroBackgroundImage String?
  featuresJson String @db.Text // JSON string for features array
  productsJson String @db.Text // JSON string for products array
  contactPhone String
  contactEmail String
  contactAddress String @db.Text
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("landing_pages")
}

model Settings {
  id        String   @id @default(cuid())
  siteName  String
  siteDescription String @db.Text
  adminEmail String
  maintenanceMode Boolean @default(false)
  allowRegistration Boolean @default(false)
  emailNotifications Boolean @default(true)
  backupFrequency String @default("daily")
  timezone String @default("Asia/Jakarta")
  language String @default("id")
  
  // New fields for enhanced settings
  logoUrl String? @db.VarChar(500)
  instagramUrl String? @db.VarChar(255)
  tiktokUrl String? @db.VarChar(255)
  facebookUrl String? @db.VarChar(255)
  facebookPixel String? @db.VarChar(100)
  googleAnalytics String? @db.VarChar(100)
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("settings")
}

model AdminSettings {
  id          String   @id @default(cuid())
  key         String   @unique
  value       String   @db.Text
  description String?  @db.Text
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("admin_settings")
}

model ProductConfig {
  id        String   @id @default(cuid())
  // Pricing factors
  priceUnder60cm Decimal @default(170.00) @db.Decimal(10,2) // Price for width < 60cm
  priceOver60cm  Decimal @default(120.00) @db.Decimal(10,2) // Price for width >= 60cm
  
  // Shipping configuration
  packingThickness Decimal @default(10.00) @db.Decimal(5,2) // Packing thickness in cm (L)
  weightConstant   Decimal @default(0.0002) @db.Decimal(10,6) // Weight calculation constant
  minShippingWeight Decimal @default(10.00) @db.Decimal(5,2) // Minimum shipping weight in kg
  
  // Additional costs
  pickupCost     Decimal @default(0.00) @db.Decimal(10,2) // Pickup service cost
  insuranceCost  Decimal @default(0.00) @db.Decimal(10,2) // Insurance cost
  packingCost    Decimal @default(0.00) @db.Decimal(10,2) // Packing cost
  
  // Warehouse address
  warehouseName    String @default("Gudang Utama")
  warehouseAddress String @default("") @db.Text
  warehouseCity    String @default("")
  warehouseProvince String @default("")
  warehousePostalCode String @default("")
  warehousePhone   String @default("")
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("product_config")
}

model ShippingRate {
  id            String   @id @default(cuid())
  idHarga       String?  // ID_HARGA from CSV
  kodeJasa      String?  // KODE_JASA
  cakupan       String?  // CAKUPAN
  via           String?  // VIA (DARAT/LAUT)
  tipe          String?  // TIPE (BL)
  hargaOnline   Decimal? @db.Decimal(10,2) // HARGA INDAH ONLINE
  hargaPks      Decimal? @db.Decimal(10,2) // HARGA PKS
  asal          String?  // ASAL
  tujuan        String   // TUJUAN (key field for updates)
  wilayah       String?  @db.Text // WILAYAH
  updateDate    String?  // UPDATE
  jenis         String?  // JENIS
  varian        String?  // VARIAN
  leadTime      String?  // LEAD_TIME
  kodeNegara    String?  // KODE_NEGARA
  simbol        String?  // SIMBOL
  nilaiTukar    Decimal? @db.Decimal(10,6) // NILAI_TUKAR
  diskon        String?  // DISKON
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  @@unique([asal, tujuan, via]) // Unique combination for updates
  @@map("shipping_rates")
}

model PaymentSettings {
  id                    String   @id
  xenditApiKey         String   @default("") @db.VarChar(255)
  xenditWebhookToken   String   @default("") @db.VarChar(255)
  xenditPublicKey      String   @default("") @db.VarChar(255)
  isXenditEnabled      Boolean  @default(true)
  supportedMethodsJson String   @default("[\"credit_card\",\"bank_transfer\",\"ewallet\",\"qris\"]") @db.Text
  minimumAmount        Decimal  @default(10000) @db.Decimal(10,2)
  maximumAmount        Decimal  @default(50000000) @db.Decimal(12,2)
  adminFee             Decimal  @default(5000) @db.Decimal(10,2)
  adminFeeType         String   @default("fixed") // 'fixed' or 'percentage'
  successRedirectUrl   String   @default("/payment/success") @db.VarChar(255)
  failureRedirectUrl   String   @default("/payment/failure") @db.VarChar(255)
  environment          String   @default("sandbox") // 'sandbox' or 'production'
  // Gmail SMTP Settings - NOTE: These columns may not exist in production
  gmailUser           String?   @db.VarChar(255)
  gmailAppPassword    String?   @db.VarChar(255)
  isEmailEnabled      Boolean?  @default(false)
  emailFrom           String?   @default("FloodBar") @db.VarChar(255)
  
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt

  @@map("payment_settings")
}

model Order {
  id                   String   @id
  customerName         String   @db.VarChar(255)
  customerEmail        String   @db.VarChar(255)
  customerPhone        String   @db.VarChar(255)
  customerAddress      String   @db.Text
  customerCity         String   @db.VarChar(255)
  customerPostalCode   String   @db.VarChar(10)
  productModel         String?  @db.VarChar(255)
  productWidth         Decimal  @db.Decimal(8,2)
  productHeight        Decimal  @db.Decimal(8,2)
  productThickness     Decimal? @db.Decimal(8,2)
  productQuantity      Int
  productFinish        String?  @db.VarChar(255)
  shippingOrigin       String   @db.VarChar(255)
  shippingDestination  String   @db.VarChar(255)
  shippingWeight       Decimal  @db.Decimal(8,2)
  shippingService      String   @db.VarChar(255)
  shippingCost         Decimal  @db.Decimal(10,2)
  paymentMethod        String   @db.VarChar(255)
  paymentProvider      String?  @db.VarChar(255)
  subtotal             Decimal  @db.Decimal(12,2)
  adminFee             Decimal  @db.Decimal(10,2)
  grandTotal           Decimal  @db.Decimal(12,2)
  status               String   @default("pending") @db.VarChar(50)
  xenditInvoiceId      String?  @db.VarChar(255)
  xenditInvoiceUrl     String?  @db.VarChar(500)
  paymentStatus        String?  @db.VarChar(50)
  isChecked            Boolean  @default(false)
  trackingNumber       String?  @db.VarChar(255)
  shippedAt            DateTime?
  paidAt               DateTime?
  
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt

  @@map("orders")
}

model News {
  id          String   @id @default(cuid())
  title       String   @db.VarChar(255)
  summary     String   @db.Text
  imageUrl    String   @db.VarChar(500)
  sourceUrl   String   @db.VarChar(500)
  sourceName  String   @db.VarChar(100)
  publishedAt DateTime
  isActive    Boolean  @default(true)
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("news")
}
